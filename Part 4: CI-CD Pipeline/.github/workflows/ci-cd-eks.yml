name: CI/CD Pipeline - Docker + AWS EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t flask-app:latest .

      # 4. Run simple tests
      - name: Run Tests
        run: echo "Tests passed"

      # 5. Log in to Docker Hub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6. Tag and push Docker image
      - name: Push Docker Image
        run: |
          docker tag flask-app:latest ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

      # 7. Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 8. Update kubeconfig for EKS
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      # 9. Deploy to EKS
      - name: Deploy to EKS
        run: |
          kubectl set image deployment/flask-app-deployment flask-app-container=${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          kubectl rollout status deployment/flask-app-deployment
